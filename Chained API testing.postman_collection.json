{
	"info": {
		"_postman_id": "f84fbc3f-cd77-45fa-8e9b-c42313fd2eaa",
		"name": "Chained API testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46632154",
		"_collection_link": "https://rv-8083040.postman.co/workspace/RV's-Workspace~a9b9699e-fd4d-4d59-8c73-a923614a7f21/collection/46632154-f84fbc3f-cd77-45fa-8e9b-c42313fd2eaa?action=share&source=collection_link&creator=46632154"
	},
	"item": [
		{
			"name": "Symbol_Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is ok 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    \r",
							"})\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"At least 1 search match found.\", function(){\r",
							"    pm.expect(jsonData).to.have.property(\"bestMatches\");\r",
							"    pm.expect(jsonData.bestMatches.length).to.be.above(0);\r",
							"})\r",
							"\r",
							"//Save first symbol\r",
							"let symbol = jsonData.bestMatches[0][\"1. symbol\"];\r",
							"pm.environment.set(\"stock_symbol\", symbol);\r",
							"console.log(\"Saved symbol: \",symbol );"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}?function=SYMBOL_SEARCH&keywords=tesla&apikey={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"query": [
						{
							"key": "function",
							"value": "SYMBOL_SEARCH"
						},
						{
							"key": "keywords",
							"value": "tesla"
						},
						{
							"key": "apikey",
							"value": "{{api_key}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Time_Series_daily",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is ok 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Symbol data loaded.\", function(){\r",
							"    pm.expect(jsonData[\"Time Series (Daily)\"]).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"At least one daily entry exists\",()=> {\r",
							"    pm.expect(Object.keys(jsonData[\"Time Series (Daily)\"]).length).to.be.above(0);\r",
							"});\r",
							"\r",
							"// Output today's price\r",
							"\r",
							"let today = new Date().toISOString().slice(0.10);\r",
							"let prices = jsonData[\"Time Series (Daily)\"][today];\r",
							"if(prices){\r",
							"    console.log(\"Today's open price: \", prices[\"1. open\"]);\r",
							"}\r",
							"else{\r",
							"    console.log(\"Today's prices not available yet...\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}?function=TIME_SERIES_DAILY&symbol={{stock_symbol}}&apikey={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"query": [
						{
							"key": "function",
							"value": "TIME_SERIES_DAILY"
						},
						{
							"key": "symbol",
							"value": "{{stock_symbol}}"
						},
						{
							"key": "apikey",
							"value": "{{api_key}}"
						}
					]
				}
			},
			"response": []
		}
	]
}